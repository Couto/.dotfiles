set nocompatible              " be iMproved, required
filetype off                  " required

" Vim native settings
set pastetoggle=<F2>
set nowrap                    " don't wrap lines
set smartindent
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1

" Numbers
set number                    " Show gutter
set numberwidth=5

" Show invisibles
set list " Display white space
set listchars=tab:▸\ ,eol:¬,trail:·,space:·,extends:>,precedes:<

" Show matching parens
let loaded_matchparen = 1

" Don’t create backups when editing files in certain directories
set backupskip=/tmp/*,/private/tmp/*

" Centralize backups, swapfiles and undo history
if exists("&backupdir")
  set backupdir=~/.vim/backups
endif

if exists("&directory")
  set directory=~/.vim/swaps
endif

if exists("&undodir")
  set undodir=~/.vim/undo
  set undofile
endif

" Load bundles
if filereadable(expand("~/.vimrc.bundles"))
  source ~/.vimrc.bundles
endif

" Reload .vimrc whenever we make changes
augroup reload_vimrc " {
  autocmd!
  autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }

" Theme
if has("termguicolors")
 "  set termguicolors       " enable true colors support
endif

" Ayu
" let ayucolor="light"  " for light version of theme
let ayucolor="mirage"   " for mirage version of theme
" let ayucolor="dark"   " for dark version of theme

" Nord
colorscheme nord

" NERDTree
let NERDTreeShowHidden=1      " Show hidden files
map <C-n> :NERDTreeToggle<CR>
autocmd vimenter * NERDTree " open a NERDTree automatically when vim starts up
autocmd vimenter * if !argc() | NERDTree | endif " open a NERDTree automatically when vim starts up if no files were specified
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif "close vim if the only window left open is a NERDTree

" Ale
let g:airline#extensions#ale#enabled = 1 " Show errors in statusline
let g:ale_lint_on_text_changed = 'never' " Dont run ale when text changes
let g:ale_lint_on_enter = 0              " Dont run ale when opening a file
let g:ale_linters = {
\   'javascript': ['eslint'],
\}

let g:ale_fixers = {
\  'javascript': ['eslint', 'prettier']
\}

" Auto-format Elm files
let g:elm_format_autosave = 1

" vim-airline
let g:airline_powerline_fonts=0             " Automatically populate the g:airline_symbols dictionary with the powerline symbols.
let g:airline#extensions#tabline#enabled=1  " Automatically displays all buffers when there's only one tab open.

" vim-gitgutter
let g:gitgutter_diff_args='-w'        " Ignore whitespace on git diffs
let g:gitgutter_realtime=1            " Turn to zero for performance
let g:gitgutter_eager=1               " Turn to zero for performance
let g:gitgutter_sign_column_always=1  " Always show the gutter

highlight SignColumn ctermbg=none
highlight GitGutterAdd ctermbg=none
highlight GitGutterChange ctermbg=none
highlight GitGutterDelete ctermbg=none
highlight GitGutterChangeDelete ctermbg=none

" vim-autoclose
let g:autoclose_vim_commentmode=1

filetype plugin indent on    " required

" vim-markdown
let g:vim_markdown_toc_autofit=1
au FileType markdown setl conceallevel=2
